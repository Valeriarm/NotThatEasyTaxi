{"ast":null,"code":"import _classCallCheck from \"/home/linux/Escritorio/prueba/proyecto1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/linux/Escritorio/prueba/proyecto1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/linux/Escritorio/prueba/proyecto1/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/linux/Escritorio/prueba/proyecto1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/linux/Escritorio/prueba/proyecto1/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/linux/Escritorio/prueba/proyecto1/src/componentes/MiMapa.js\";\nimport React, { PureComponent } from 'react';\nimport Leaflet from 'leaflet';\nimport { Map, Marker, Popup, TileLayer, GeoJSON } from 'react-leaflet';\nimport { markers, mapConfig } from '../../helper/utils';\nimport './ReactLeafletMap.styl';\nLeaflet.Icon.Default.imagePath = '//cdnjs.cloudflare.com/ajax/libs/leaflet/1.0.0/images/'; // Data for GeoJSON usage\n\nvar data = {\n  type: \"FeatureCollection\",\n  features: [{\n    type: \"Feature\",\n    id: \"01\",\n    properties: {\n      name: \"Alabama\",\n      density: 94.65\n    },\n    geometry: {\n      type: \"Polygon\",\n      coordinates: [[[-87.359296, 35.00118], [-85.606675, 34.984749], [-85.431413, 34.124869], [-85.184951, 32.859696], [-85.069935, 32.580372], coordina[(-84.960397, 32.421541)], [-85.004212, 32.322956], [-84.889196, 32.262709], [-85.058981, 32.13674], [-85.053504, 32.01077], [-85.141136, 31.840985], [-85.042551, 31.539753], [-85.113751, 31.27686], [-85.004212, 31.003013], [-85.497137, 30.997536], [-87.600282, 30.997536], [-87.633143, 30.86609], [-87.408589, 30.674397], [-87.446927, 30.510088], [-87.37025, 30.427934], [-87.518128, 30.280057], [-87.655051, 30.247195], [-87.90699, 30.411504], [-87.934375, 30.657966], [-88.011052, 30.685351], [-88.10416, 30.499135], [-88.137022, 30.318396], [-88.394438, 30.367688], [-88.471115, 31.895754], [-88.241084, 33.796253], [-88.098683, 34.891641], [-88.202745, 34.995703], [-87.359296, 35.00118]]]\n    }\n  }]\n};\n\nvar ReactLeafletMap =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(ReactLeafletMap, _PureComponent);\n\n  function ReactLeafletMap() {\n    _classCallCheck(this, ReactLeafletMap);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ReactLeafletMap).apply(this, arguments));\n  }\n\n  _createClass(ReactLeafletMap, [{\n    key: \"getStyle\",\n    // Get the style for your polygons from GeoJSON, it can be dependable on a parameter you want.\n    // For example, you can use different style for different density of the location\n    value: function getStyle(feature) {\n      return {\n        weight: 2,\n        opacity: 1,\n        color: 'blue',\n        dashArray: '3',\n        fillOpacity: 0.7\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // create an array with marker components\n      var LeafletMarkers = markers.map(function (marker) {\n        return React.createElement(Marker, {\n          position: marker.latlng,\n          key: \"marker_\".concat(marker.name),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(Popup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, marker.name)));\n      });\n      return React.createElement(\"div\", {\n        className: \"map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Map, {\n        center: mapConfig.center,\n        zoom: mapConfig.zoom,\n        className: \"map__reactleaflet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(TileLayer, {\n        url: \"https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"http://www.openstreetmap.org/copyright\\\">OpenStreetMap</a>, \\xA9 <a href=\\\"https://carto.com/attribution\\\">CARTO</a>\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), LeafletMarkers, React.createElement(GeoJSON, {\n        data: data,\n        style: this.getStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ReactLeafletMap;\n}(PureComponent);\n\nexport default ReactLeafletMap;","map":{"version":3,"sources":["/home/linux/Escritorio/prueba/proyecto1/src/componentes/MiMapa.js"],"names":["React","PureComponent","Leaflet","Map","Marker","Popup","TileLayer","GeoJSON","markers","mapConfig","Icon","Default","imagePath","data","type","features","id","properties","name","density","geometry","coordinates","coordina","ReactLeafletMap","feature","weight","opacity","color","dashArray","fillOpacity","LeafletMarkers","map","marker","latlng","center","zoom","getStyle"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,KAAtB,EAA6BC,SAA7B,EAAwCC,OAAxC,QAAuD,eAAvD;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,oBAAnC;AAEA,OAAO,wBAAP;AAEAP,OAAO,CAACQ,IAAR,CAAaC,OAAb,CAAqBC,SAArB,GAAiC,wDAAjC,C,CAGA;;AACA,IAAMC,IAAI,GAAG;AACXC,EAAAA,IAAI,EAAE,mBADK;AAEXC,EAAAA,QAAQ,EAAE,CACR;AACED,IAAAA,IAAI,EAAE,SADR;AAEEE,IAAAA,EAAE,EAAE,IAFN;AAGEC,IAAAA,UAAU,EAAE;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,OAAO,EAAE;AAA5B,KAHd;AAIEC,IAAAA,QAAQ,EAAE;AACRN,MAAAA,IAAI,EAAE,SADE;AAERO,MAAAA,WAAW,EAAE,CACX,CACE,CAAC,CAAC,SAAF,EAAa,QAAb,CADF,EAEE,CAAC,CAAC,SAAF,EAAa,SAAb,CAFF,EAGE,CAAC,CAAC,SAAF,EAAa,SAAb,CAHF,EAIE,CAAC,CAAC,SAAF,EAAa,SAAb,CAJF,EAKE,CAAC,CAAC,SAAF,EAAa,SAAb,CALF,EAMDC,QAAQ,EAAI,CAAC,SAAD,EAAY,SAAhB,EANP,EAOE,CAAC,CAAC,SAAF,EAAa,SAAb,CAPF,EAQE,CAAC,CAAC,SAAF,EAAa,SAAb,CARF,EASE,CAAC,CAAC,SAAF,EAAa,QAAb,CATF,EAUE,CAAC,CAAC,SAAF,EAAa,QAAb,CAVF,EAWE,CAAC,CAAC,SAAF,EAAa,SAAb,CAXF,EAYE,CAAC,CAAC,SAAF,EAAa,SAAb,CAZF,EAaE,CAAC,CAAC,SAAF,EAAa,QAAb,CAbF,EAcE,CAAC,CAAC,SAAF,EAAa,SAAb,CAdF,EAeE,CAAC,CAAC,SAAF,EAAa,SAAb,CAfF,EAgBE,CAAC,CAAC,SAAF,EAAa,SAAb,CAhBF,EAiBE,CAAC,CAAC,SAAF,EAAa,QAAb,CAjBF,EAkBE,CAAC,CAAC,SAAF,EAAa,SAAb,CAlBF,EAmBE,CAAC,CAAC,SAAF,EAAa,SAAb,CAnBF,EAoBE,CAAC,CAAC,QAAF,EAAY,SAAZ,CApBF,EAqBE,CAAC,CAAC,SAAF,EAAa,SAAb,CArBF,EAsBE,CAAC,CAAC,SAAF,EAAa,SAAb,CAtBF,EAuBE,CAAC,CAAC,QAAF,EAAY,SAAZ,CAvBF,EAwBE,CAAC,CAAC,SAAF,EAAa,SAAb,CAxBF,EAyBE,CAAC,CAAC,SAAF,EAAa,SAAb,CAzBF,EA0BE,CAAC,CAAC,QAAF,EAAY,SAAZ,CA1BF,EA2BE,CAAC,CAAC,SAAF,EAAa,SAAb,CA3BF,EA4BE,CAAC,CAAC,SAAF,EAAa,SAAb,CA5BF,EA6BE,CAAC,CAAC,SAAF,EAAa,SAAb,CA7BF,EA8BE,CAAC,CAAC,SAAF,EAAa,SAAb,CA9BF,EA+BE,CAAC,CAAC,SAAF,EAAa,SAAb,CA/BF,EAgCE,CAAC,CAAC,SAAF,EAAa,SAAb,CAhCF,EAiCE,CAAC,CAAC,SAAF,EAAa,QAAb,CAjCF,CADW;AAFL;AAJZ,GADQ;AAFC,CAAb;;IAmDMC,e;;;;;;;;;;;;;AAGN;AACA;6BACWC,O,EAAS;AAChB,aAAO;AACHC,QAAAA,MAAM,EAAE,CADL;AAEHC,QAAAA,OAAO,EAAE,CAFN;AAGHC,QAAAA,KAAK,EAAE,MAHJ;AAIHC,QAAAA,SAAS,EAAE,GAJR;AAKHC,QAAAA,WAAW,EAAE;AALV,OAAP;AAOD;;;6BAEQ;AACP;AACA,UAAMC,cAAc,GAAGtB,OAAO,CAACuB,GAAR,CAAY,UAAAC,MAAM;AAAA,eACvC,oBAAC,MAAD;AAAQ,UAAA,QAAQ,EAAEA,MAAM,CAACC,MAAzB;AAAiC,UAAA,GAAG,mBAAYD,MAAM,CAACd,IAAnB,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOc,MAAM,CAACd,IAAd,CADF,CADF,CADuC;AAAA,OAAlB,CAAvB;AAQA,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,MAAM,EAAET,SAAS,CAACyB,MAAvB;AAA+B,QAAA,IAAI,EAAEzB,SAAS,CAAC0B,IAA/C;AAAqD,QAAA,SAAS,EAAC,mBAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,GAAG,EAAC,8EADN;AAEE,QAAA,WAAW,EAAC,qIAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKGL,cALH,EAOE,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAEjB,IAAf;AAAqB,QAAA,KAAK,EAAE,KAAKuB,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADF,CADF;AAaD;;;;EAtC2BnC,a;;AAyC9B,eAAesB,eAAf","sourcesContent":["import React, { PureComponent } from 'react';\nimport Leaflet from 'leaflet';\nimport { Map, Marker, Popup, TileLayer, GeoJSON } from 'react-leaflet';\nimport { markers, mapConfig } from '../../helper/utils';\n\nimport './ReactLeafletMap.styl';\n\nLeaflet.Icon.Default.imagePath = '//cdnjs.cloudflare.com/ajax/libs/leaflet/1.0.0/images/';\n\n\n// Data for GeoJSON usage\nconst data = {\n  type: \"FeatureCollection\",\n  features: [\n    {\n      type: \"Feature\",\n      id: \"01\",\n      properties: { name: \"Alabama\", density: 94.65 },\n      geometry: {\n        type: \"Polygon\",\n        coordinates: [\n          [\n            [-87.359296, 35.00118],\n            [-85.606675, 34.984749],\n            [-85.431413, 34.124869],\n            [-85.184951, 32.859696],\n            [-85.069935, 32.580372],\n         coordina   [-84.960397, 32.421541],\n            [-85.004212, 32.322956],\n            [-84.889196, 32.262709],\n            [-85.058981, 32.13674],\n            [-85.053504, 32.01077],\n            [-85.141136, 31.840985],\n            [-85.042551, 31.539753],\n            [-85.113751, 31.27686],\n            [-85.004212, 31.003013],\n            [-85.497137, 30.997536],\n            [-87.600282, 30.997536],\n            [-87.633143, 30.86609],\n            [-87.408589, 30.674397],\n            [-87.446927, 30.510088],\n            [-87.37025, 30.427934],\n            [-87.518128, 30.280057],\n            [-87.655051, 30.247195],\n            [-87.90699, 30.411504],\n            [-87.934375, 30.657966],\n            [-88.011052, 30.685351],\n            [-88.10416, 30.499135],\n            [-88.137022, 30.318396],\n            [-88.394438, 30.367688],\n            [-88.471115, 31.895754],\n            [-88.241084, 33.796253],\n            [-88.098683, 34.891641],\n            [-88.202745, 34.995703],\n            [-87.359296, 35.00118]\n          ]\n        ]\n      }\n    }\n  ]\n}\n\nclass ReactLeafletMap extends PureComponent {\n\n\n// Get the style for your polygons from GeoJSON, it can be dependable on a parameter you want.\n// For example, you can use different style for different density of the location\n  getStyle(feature) {\n    return {\n        weight: 2,\n        opacity: 1,\n        color: 'blue',\n        dashArray: '3',\n        fillOpacity: 0.7\n    }\n  }\n\n  render() {\n    // create an array with marker components\n    const LeafletMarkers = markers.map(marker => (\n      <Marker position={marker.latlng} key={`marker_${marker.name}`}>\n        <Popup>\n          <span>{marker.name}</span>\n        </Popup>\n      </Marker>\n    ));\n\n    return (\n      <div className=\"map\">\n        <Map center={mapConfig.center} zoom={mapConfig.zoom} className=\"map__reactleaflet\">\n          <TileLayer\n            url=\"https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png\"\n            attribution='&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>, &copy; <a href=\"https://carto.com/attribution\">CARTO</a>'\n          />\n          {LeafletMarkers}\n          {/* You can now try to find Alabama on a Map to see how it looks like now with GeoJSON*/}\n          <GeoJSON data={data} style={this.getStyle} />\n        </Map>\n      </div>\n    );\n  }\n}\n\nexport default ReactLeafletMap;"]},"metadata":{},"sourceType":"module"}
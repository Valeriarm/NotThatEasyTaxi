{"ast":null,"code":"import _objectSpread from \"/home/linux/Escritorio/prueba/proyecto1/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/linux/Escritorio/prueba/proyecto1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/linux/Escritorio/prueba/proyecto1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/linux/Escritorio/prueba/proyecto1/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/linux/Escritorio/prueba/proyecto1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/linux/Escritorio/prueba/proyecto1/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/linux/Escritorio/prueba/proyecto1/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/linux/Escritorio/prueba/proyecto1/src/componentes/MiMapa.js\";\nimport React from 'react';\nimport MapGL from 'react-map-gl';\nimport ScatterplotOverlay from 'react-map-gl';\nimport CONFIG from '../../../config.json';\nimport { mapConfig, locations } from '../../helper/utils';\n\nvar MiMapa =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MiMapa, _React$Component);\n\n  function MiMapa(props) {\n    var _this;\n\n    _classCallCheck(this, MiMapa);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MiMapa).call(this, props));\n    _this.state = {\n      viewport: {\n        width: window.innerWidth,\n        height: 600,\n        latitude: mapConfig.center[0],\n        longitude: mapConfig.center[1],\n        zoom: mapConfig.zoom,\n        isDragging: false,\n        startDragLngLat: mapConfig.center,\n        pitch: 50,\n        bearing: 0\n      }\n    };\n    _this.onChangeViewport = _this.onChangeViewport.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MiMapa, [{\n    key: \"onChangeViewport\",\n    value: function onChangeViewport(viewport) {\n      this.setState({\n        viewport: _objectSpread({}, this.state.viewport, viewport)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var viewport = this.state.viewport;\n      return React.createElement(\"div\", {\n        className: \"reactmapgl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(MapGL, Object.assign({}, viewport, {\n        mapboxApiAccessToken: CONFIG.MAPBOX_ACCESS_TOKEN,\n        perspectiveEnabled: true,\n        onChangeViewport: this.onChangeViewport,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return MiMapa;\n}(React.Component);\n\nexport default MiMapa;","map":{"version":3,"sources":["/home/linux/Escritorio/prueba/proyecto1/src/componentes/MiMapa.js"],"names":["React","MapGL","ScatterplotOverlay","CONFIG","mapConfig","locations","MiMapa","props","state","viewport","width","window","innerWidth","height","latitude","center","longitude","zoom","isDragging","startDragLngLat","pitch","bearing","onChangeViewport","bind","setState","MAPBOX_ACCESS_TOKEN","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,kBAAP,MAA+B,cAA/B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,oBAArC;;IAEMC,M;;;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,KAAK,EAAEC,MAAM,CAACC,UADN;AAERC,QAAAA,MAAM,EAAE,GAFA;AAGRC,QAAAA,QAAQ,EAAEV,SAAS,CAACW,MAAV,CAAiB,CAAjB,CAHF;AAIRC,QAAAA,SAAS,EAAEZ,SAAS,CAACW,MAAV,CAAiB,CAAjB,CAJH;AAKRE,QAAAA,IAAI,EAAEb,SAAS,CAACa,IALR;AAMRC,QAAAA,UAAU,EAAE,KANJ;AAORC,QAAAA,eAAe,EAAEf,SAAS,CAACW,MAPnB;AAQRK,QAAAA,KAAK,EAAE,EARC;AASRC,QAAAA,OAAO,EAAE;AATD;AADC,KAAb;AAcA,UAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,uDAAxB;AAjBiB;AAkBlB;;;;qCAEgBd,Q,EAAU;AACzB,WAAKe,QAAL,CAAc;AACZf,QAAAA,QAAQ,oBAAO,KAAKD,KAAL,CAAWC,QAAlB,EAA+BA,QAA/B;AADI,OAAd;AAGD;;;6BAEQ;AAAA,UACCA,QADD,GACc,KAAKD,KADnB,CACCC,QADD;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,oBACMA,QADN;AAEE,QAAA,oBAAoB,EAAEN,MAAM,CAACsB,mBAF/B;AAGE,QAAA,kBAAkB,MAHpB;AAIE,QAAA,gBAAgB,EAAE,KAAKH,gBAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF;AAWD;;;;EAxCkBtB,KAAK,CAAC0B,S;;AA2C3B,eAAepB,MAAf","sourcesContent":["import React from 'react';\nimport MapGL from 'react-map-gl';\nimport ScatterplotOverlay from 'react-map-gl'\nimport CONFIG from '../../../config.json';\nimport { mapConfig, locations } from '../../helper/utils';\n\nclass MiMapa extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      viewport: {\n        width: window.innerWidth,\n        height: 600,\n        latitude: mapConfig.center[0],\n        longitude: mapConfig.center[1],\n        zoom: mapConfig.zoom,\n        isDragging: false,\n        startDragLngLat: mapConfig.center,\n        pitch: 50,\n        bearing: 0\n      }\n    };\n\n    this.onChangeViewport = this.onChangeViewport.bind(this);\n  }\n\n  onChangeViewport(viewport) {\n    this.setState({\n      viewport: { ...this.state.viewport, ...viewport }\n    });\n  }\n\n  render() {\n    const { viewport } = this.state;\n    return (\n      <div className=\"reactmapgl\">\n        <MapGL\n          {...viewport}\n          mapboxApiAccessToken={CONFIG.MAPBOX_ACCESS_TOKEN}\n          perspectiveEnabled\n          onChangeViewport={this.onChangeViewport}\n        >\n        </MapGL>\n      </div>\n    );\n  }\n}\n\nexport default MiMapa;"]},"metadata":{},"sourceType":"module"}